{"version":3,"sources":["webpack:///./src/components/Navigation.js","webpack:///./src/components/BlogPostPreview.js","webpack:///./src/templates/blog-list-template.js"],"names":["Navigation","skip","total","pages","Math","ceil","currentPage","isNotMaxPage","hasNewerPosts","className","role","to","aria-hidden","BlogPostPreview","node","excerpt","frontmatter","key","path","title","date","tags","map","t","i","BlogList","render","siteTitle","this","props","data","site","siteMetadata","posts","allMarkdownRemark","edges","location","keywords","post","idx","totalCount","pageContext","React","Component","blogListQuery"],"mappings":"6FAAA,qCA8BeA,IA1BI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpBC,EAAQC,KAAKC,KAAKH,EAHT,GAITI,EAAcL,EAJL,EAIuB,EAChCM,EAAeD,IAAgBH,EAC/BK,EAAgC,IAAhBF,EAEtB,OACE,yBAAKG,UAAU,aAAaC,KAAK,cAC9BF,GACC,kBAAC,OAAD,CACEG,GAAoB,IAAhBL,EAAoB,IAApB,UAAmCA,EAAc,GACrDG,UAAW,eAEX,0BAAMG,cAAY,QAAlB,KAJF,gBAOF,0BAAMH,UAAU,eAAhB,QAAuCH,EAAvC,OAAyDH,GACxDI,GACC,kBAAC,OAAD,CAAMI,GAAE,UAAWL,EAAc,GAAKG,UAAW,eAAjD,eACc,0BAAMG,cAAY,QAAlB,S,kCCvBtB,0DAsCeC,IAlCS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,YACjB,MAAO,CACL,yBAAKC,IAAI,SAASR,UAAU,0BAC1B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,kBAAC,OAAD,CAAME,GAAIK,EAAYE,MACpB,4BAAKF,EAAYG,SAGrB,yBAAKV,UAAU,2BACb,yBAAKA,UAAU,+BACb,6CACA,kBAAC,IAAD,CAASW,KAAMJ,EAAYI,KAAMX,UAAW,aAE9C,0BAAMA,UAAU,+BAAhB,MACA,yBAAKA,UAAU,0BACb,wCACCO,EAAYK,KAAKC,KAAI,SAACC,EAAEC,GAAH,OAAS,kBAAC,OAAD,CAAMP,IAAKO,EAAGb,GAAE,QAAUY,GAAMA,UAKvE,6BACEN,IAAI,UACJR,UAAU,2DAEV,yBAAKA,UAAU,aACb,2BAAIM,EAAJ,U,6OCxBaU,E,gLACnBC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,KAAKC,aAAab,MAC9Cc,EAAQL,KAAKC,MAAMC,KAAKI,kBAAkBC,MAChD,OACE,kBAAC,IAAD,CAAe1B,UAAU,0BACvB,kBAAC,IAAD,CAAQ2B,SAAUR,KAAKC,MAAMO,SAAUjB,MAAOQ,GAC5C,kBAAC,IAAD,CAAKR,MAAK,OAAUkB,SAAU,CAAC,OAAD,oBAC9B,yBAAK5B,UAAU,QACZwB,EAAMX,KAAI,SAACgB,EAAMC,GAChB,OAAO,kBAAC,IAAD,eAAiBtB,IAAG,WAAasB,GAAWD,OAErD,kBAAC,IAAD,CAAYpC,MAAO0B,KAAKC,MAAMC,KAAKI,kBAAkBM,WAAYvC,KAAM2B,KAAKC,MAAMY,YAAYxC,W,GAZpEyC,IAAMC,WAoB/BC,EAAa","file":"component---src-templates-blog-list-template-js-1b8b18adb59346adf12e.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nconst PageSize = 5\n\nconst Navigation = ({ skip, total }) => {\n  const pages = Math.ceil(total / PageSize)\n  const currentPage = skip / PageSize + 1\n  const isNotMaxPage = currentPage !== pages\n  const hasNewerPosts = currentPage !== 1\n\n  return (\n    <nav className=\"pagination\" role=\"navigation\">\n      {hasNewerPosts && (\n        <Link\n          to={currentPage === 2 ? '/' : `/page/${currentPage - 1}`}\n          className={'newer-posts'}\n        >\n          <span aria-hidden=\"true\">&larr;</span> Newer Posts\n        </Link>\n      )}\n      <span className=\"page-number\">{`Page ${currentPage} of ${pages}`}</span>\n      {isNotMaxPage && (\n        <Link to={`/page/${currentPage + 1}`} className={'older-posts'}>\n          Older Posts <span aria-hidden=\"true\">&rarr;</span>\n        </Link>\n      )}\n    </nav>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TimeAgo from 'react-timeago/lib/index'\n\nconst BlogPostPreview = ({ node }) => {\n  const { excerpt, frontmatter } = node\n  return [\n    <div key=\"sample\" className=\"sample animated fadeIn\">\n      <div className=\"container\">\n        <div className=\"title animated fadeInUp\">\n          <Link to={frontmatter.path}>\n            <h1>{frontmatter.title}</h1>\n          </Link>\n        </div>\n        <div className=\"sidebar text-right meta\">\n          <div className=\"published animated fadeInUp\">\n            <strong>Published</strong>\n            <TimeAgo date={frontmatter.date} className={'timeago'} />\n          </div>\n          <span className=\"separator animated fadeInUp\">//</span>\n          <div className=\"tags animated fadeInUp\">\n            <strong>Tags</strong>\n            {frontmatter.tags.map((t,i) => <Link key={i} to={`/tag/${t}`}>{t}</Link>)}\n          </div>\n        </div>\n      </div>\n    </div>,\n    <article\n      key=\"article\"\n      className=\"excerpt animated fadeIn post tag-f tag-fable tag-vscode\"\n    >\n      <div className=\"container\">\n        <p>{excerpt}&hellip;</p>\n      </div>\n    </article>,\n  ]\n}\n\nexport default BlogPostPreview\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport BodyClassName from 'react-body-classname'\nimport BlogPostPreview from '../components/BlogPostPreview'\nimport Navigation from '../components/Navigation'\n\nexport default class BlogList extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allMarkdownRemark.edges\n    return (\n      <BodyClassName className=\"paged archive-template\">\n        <Layout location={this.props.location} title={siteTitle}>\n          <SEO title={`Page`} keywords={[`blog`, `blog.nojaf.com`]} />\n          <div className=\"main\">\n            {posts.map((post, idx) => {\n              return <BlogPostPreview key={`preview-${idx}`} {...post} />\n            })}\n            <Navigation total={this.props.data.allMarkdownRemark.totalCount} skip={this.props.pageContext.skip} />\n          </div>\n        </Layout>\n      </BodyClassName>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 560)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            path\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}