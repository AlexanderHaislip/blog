{"version":3,"sources":["webpack:///./src/components/BlogPostPreview.js","webpack:///./src/templates/tags.js"],"names":["BlogPostPreview","node","excerpt","frontmatter","key","className","to","path","title","date","tags","map","t","i","Header","tag","total","data-stellar-ratio","id","href","Tags","pageContext","data","location","totalCount","allMarkdownRemark","siteTitle","site","siteMetadata","posts","edges","keywords","post","idx","pageQuery"],"mappings":"4FAAA,0DAsCeA,IAlCS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,YACjB,MAAO,CACL,yBAAKC,IAAI,SAASC,UAAU,0BAC1B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,kBAAC,OAAD,CAAMC,GAAIH,EAAYI,MACpB,4BAAKJ,EAAYK,SAGrB,yBAAKH,UAAU,2BACb,yBAAKA,UAAU,+BACb,6CACA,kBAAC,IAAD,CAASI,KAAMN,EAAYM,KAAMJ,UAAW,aAE9C,0BAAMA,UAAU,+BAAhB,MACA,yBAAKA,UAAU,0BACb,wCACCF,EAAYO,KAAKC,KAAI,SAACC,EAAEC,GAAH,OAAS,kBAAC,OAAD,CAAMT,IAAKS,EAAGP,GAAE,QAAUM,GAAMA,UAKvE,6BACER,IAAI,UACJC,UAAU,2DAEV,yBAAKA,UAAU,aACb,2BAAIH,EAAJ,U,+KCzBFY,EAAS,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACpB,OAAO,4BAAQX,UAAU,mBACvB,yBAAKA,UAAU,YAAYY,qBAAmB,QAC5C,yBAAKZ,UAAU,2BACb,4BAAKU,GACL,yBAAKV,UAAU,SAAf,iBACgB,uBAAGa,GAAG,UACHC,KAAI,iCAAmCJ,EAAnC,0CAAgFA,EAAhF,KAAwF,uBAC7GV,UAAU,sCAGd,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,+BACb,gCAASW,EAAT,kBA4BKI,UArBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBR,EAAQM,EAARN,IACAS,EAAeF,EAAKG,kBAApBD,WACFE,EAAYJ,EAAKK,KAAKC,aAAapB,MACnCqB,EAAQP,EAAKG,kBAAkBK,MAErC,OACE,kBAAC,IAAD,CAAezB,UAAS,oBAAsBU,GAC5C,kBAAC,IAAD,CAAQQ,SAAUA,EAAUf,MAAOkB,GACjC,kBAAC,IAAD,CAAKlB,MAAOO,EAAKgB,SAAU,CAAC,OAAD,oBAC3B,yBAAK1B,UAAU,QACb,kBAACS,EAAD,CAAQE,MAAOQ,EAAYT,IAAKA,IAC/Bc,EAAMlB,KAAI,SAACqB,EAAMC,GAChB,OAAO,kBAAC,IAAD,eAAiB7B,IAAG,WAAa6B,GAAWD,WAUxD,IAAME,EAAS","file":"component---src-templates-tags-js-f3a65ffeb4625de2be74.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport TimeAgo from 'react-timeago/lib/index'\r\n\r\nconst BlogPostPreview = ({ node }) => {\r\n  const { excerpt, frontmatter } = node\r\n  return [\r\n    <div key=\"sample\" className=\"sample animated fadeIn\">\r\n      <div className=\"container\">\r\n        <div className=\"title animated fadeInUp\">\r\n          <Link to={frontmatter.path}>\r\n            <h1>{frontmatter.title}</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"sidebar text-right meta\">\r\n          <div className=\"published animated fadeInUp\">\r\n            <strong>Published</strong>\r\n            <TimeAgo date={frontmatter.date} className={'timeago'} />\r\n          </div>\r\n          <span className=\"separator animated fadeInUp\">//</span>\r\n          <div className=\"tags animated fadeInUp\">\r\n            <strong>Tags</strong>\r\n            {frontmatter.tags.map((t,i) => <Link key={i} to={`/tag/${t}`}>{t}</Link>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    <article\r\n      key=\"article\"\r\n      className=\"excerpt animated fadeIn post tag-f tag-fable tag-vscode\"\r\n    >\r\n      <div className=\"container\">\r\n        <p>{excerpt}&hellip;</p>\r\n      </div>\r\n    </article>,\r\n  ]\r\n}\r\n\r\nexport default BlogPostPreview\r\n","import React from 'react'\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/seo'\r\nimport BodyClassName from 'react-body-classname'\r\nimport BlogPostPreview from '../components/BlogPostPreview'\r\nimport { graphql } from 'gatsby'\r\n\r\nconst Header = ({tag, total}) => {\r\n  return <header className=\"animated fadeIn\">\r\n    <div className=\"container\" data-stellar-ratio=\"0.75\">\r\n      <div className=\"title animated fadeInUp\">\r\n        <h1>{tag}</h1>\r\n        <div className=\"share\">\r\n          Share this on <a id=\"twitter\"\r\n                           href={`http://twitter.com/share?text=${tag} on &amp;url=http://blog.nojaf.com/tag/${tag}/`}><i\r\n          className=\"fa nojaf-share-icon fa-twitter\" /></a>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar text-right meta\">\r\n        <div className=\"published animated fadeInUp\">\r\n          <strong>{total} articles</strong>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>;\r\n}\r\n\r\nconst Tags = ({ pageContext, data, location }) => {\r\n  const { tag } = pageContext\r\n  const { totalCount } = data.allMarkdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <BodyClassName className={`tag-template tag-${tag}`}>\r\n      <Layout location={location} title={siteTitle}>\r\n        <SEO title={tag} keywords={[`blog`, `blog.nojaf.com`]} />\r\n        <div className=\"main\">\r\n          <Header total={totalCount} tag={tag} />\r\n          {posts.map((post, idx) => {\r\n            return <BlogPostPreview key={`preview-${idx}`} {...post} />\r\n          })}\r\n        </div>\r\n      </Layout>\r\n    </BodyClassName>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            title\r\n            path\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}